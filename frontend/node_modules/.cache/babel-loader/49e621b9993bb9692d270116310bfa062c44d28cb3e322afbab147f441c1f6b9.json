{"ast":null,"code":"//export const BASE_URL = \"http://localhost:3001\";\n\nexport const BASE_URL = \"http://localhost:3000\";\nconst checkResponce = res => res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status} `);\nexport const register = _ref => {\n  let {\n    email,\n    password\n  } = _ref;\n  return fetch(`${BASE_URL}/signup`, {\n    method: \"POST\",\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(res => checkResponce(res));\n};\nexport function login(email, password) {\n  return fetch(`${BASE_URL}/signin`, {\n    method: \"POST\",\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(res => checkResponce(res)).then(data => {\n    if (data.token) {\n      const {\n        token\n      } = data;\n      localStorage.setItem('jwt', token);\n      return token;\n    }\n    ;\n  });\n}\n;\nexport function checkToken(token) {\n  return fetch(`${BASE_URL}/users/me`, {\n    headers: {\n      \"Content-Type\": \"appliccation/json\",\n      \"Authorization\": `Bearer ${token}`\n    }\n  }).then(res => checkResponce(res)).then(data => data);\n}\n;","map":{"version":3,"names":["BASE_URL","checkResponce","res","ok","json","Promise","reject","status","register","_ref","email","password","fetch","method","headers","body","JSON","stringify","then","login","data","token","localStorage","setItem","checkToken"],"sources":["/Users/a777/Desktop/react-mesto-api-full-gha/frontend/src/utils/auth.js"],"sourcesContent":["//export const BASE_URL = \"http://localhost:3001\";\n\nexport const BASE_URL = \"http://localhost:3000\";\n\nconst checkResponce = (res) => \n\tres.ok ? res.json() : Promise.reject(`Ошибка: ${res.status} `)\n\nexport const register = ({email, password}) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: \"POST\",\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ email, password }),\n  }).then((res) => checkResponce(res))\n};\n\nexport function login (email, password) {\n\treturn fetch(`${BASE_URL}/signin`, {\n\t\tmethod: \"POST\",\n\t\theaders: {\n\t\t\t'Accept': 'application/json',\n      'Content-Type': 'application/json'\n\t\t},\n\t\tbody: JSON.stringify({ email, password })\n\t})\n\t\t.then(res => checkResponce(res))\n\t\t.then((data) => {\n\t\t\tif(data.token) {\n\t\t\t\tconst { token } = data;\n\t\t\t\tlocalStorage.setItem('jwt', token);\n\n\t\t\t\treturn token;\n\t\t\t};\n\t\t})\n};\n\nexport function checkToken (token) {\n  return fetch(`${BASE_URL}/users/me`, {\n    headers: {\n      \"Content-Type\": \"appliccation/json\",\n      \"Authorization\": `Bearer ${token}`\n    },\n  })\n\t.then(res => checkResponce(res))\n\t.then(data => data)\n};\n"],"mappings":"AAAA;;AAEA,OAAO,MAAMA,QAAQ,GAAG,uBAAuB;AAE/C,MAAMC,aAAa,GAAIC,GAAG,IACzBA,GAAG,CAACC,EAAE,GAAGD,GAAG,CAACE,IAAI,CAAC,CAAC,GAAGC,OAAO,CAACC,MAAM,CAAE,WAAUJ,GAAG,CAACK,MAAO,GAAE,CAAC;AAE/D,OAAO,MAAMC,QAAQ,GAAGC,IAAA,IAAuB;EAAA,IAAtB;IAACC,KAAK;IAAEC;EAAQ,CAAC,GAAAF,IAAA;EACxC,OAAOG,KAAK,CAAE,GAAEZ,QAAS,SAAQ,EAAE;IACjCa,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,QAAQ,EAAE,kBAAkB;MAC5B,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEP,KAAK;MAAEC;IAAS,CAAC;EAC1C,CAAC,CAAC,CAACO,IAAI,CAAEhB,GAAG,IAAKD,aAAa,CAACC,GAAG,CAAC,CAAC;AACtC,CAAC;AAED,OAAO,SAASiB,KAAKA,CAAET,KAAK,EAAEC,QAAQ,EAAE;EACvC,OAAOC,KAAK,CAAE,GAAEZ,QAAS,SAAQ,EAAE;IAClCa,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACR,QAAQ,EAAE,kBAAkB;MACzB,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEP,KAAK;MAAEC;IAAS,CAAC;EACzC,CAAC,CAAC,CACAO,IAAI,CAAChB,GAAG,IAAID,aAAa,CAACC,GAAG,CAAC,CAAC,CAC/BgB,IAAI,CAAEE,IAAI,IAAK;IACf,IAAGA,IAAI,CAACC,KAAK,EAAE;MACd,MAAM;QAAEA;MAAM,CAAC,GAAGD,IAAI;MACtBE,YAAY,CAACC,OAAO,CAAC,KAAK,EAAEF,KAAK,CAAC;MAElC,OAAOA,KAAK;IACb;IAAC;EACF,CAAC,CAAC;AACJ;AAAC;AAED,OAAO,SAASG,UAAUA,CAAEH,KAAK,EAAE;EACjC,OAAOT,KAAK,CAAE,GAAEZ,QAAS,WAAU,EAAE;IACnCc,OAAO,EAAE;MACP,cAAc,EAAE,mBAAmB;MACnC,eAAe,EAAG,UAASO,KAAM;IACnC;EACF,CAAC,CAAC,CACFH,IAAI,CAAChB,GAAG,IAAID,aAAa,CAACC,GAAG,CAAC,CAAC,CAC/BgB,IAAI,CAACE,IAAI,IAAIA,IAAI,CAAC;AACpB;AAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}