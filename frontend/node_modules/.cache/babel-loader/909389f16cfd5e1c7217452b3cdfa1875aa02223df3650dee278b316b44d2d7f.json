{"ast":null,"code":"class Api {\n  constructor(_ref) {\n    let {\n      baseUrl,\n      headers\n    } = _ref;\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n    this._userUrl = `${this._baseUrl}/users/me`;\n    this._cardsUrl = `${this._baseUrl}/cards`;\n    this._likesUrl = `${this._baseUrl}/cards/likes`;\n    this._token = headers[`authorization`];\n  }\n  _checkResponse(response, method) {\n    return response.ok ? response.json() : Promise.reject(`${method}: ${response.status}`);\n  }\n  getUserData(token) {\n    return fetch(`users/me`, {}).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка: ${res.status}`);\n    });\n  }\n  saveUserChanges(_ref2) {\n    let {\n      name,\n      about\n    } = _ref2;\n    return fetch(this._userUrl, {\n      method: \"PATCH\",\n      headers: {\n        headers: {\n          ...this.headers,\n          Authorization: `Bearer ${'token'}`,\n          \"Content-Type\": \"application/json\"\n        }\n      },\n      body: JSON.stringify({\n        name: name,\n        about: about\n      })\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка: ${res.status}`);\n    });\n  }\n  changedAvatar(src) {\n    return fetch(`${this._userUrl}/avatar`, {\n      method: \"PATCH\",\n      headers: {\n        authorization: this._token,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        avatar: src\n      })\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка: ${res.status}`);\n    });\n  }\n  setUserInfo(name, about) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers,\n      method: \"PATCH\",\n      body: JSON.stringify({\n        name: name,\n        about: about\n      })\n    }).then(res => {\n      return this._checkResponse(res, \"setUserInfo\");\n    });\n  }\n  getInitialCards(token) {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: {\n        ...this.headers,\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => {\n      return this._checkResponse(res, \"getInitialCards\");\n    });\n  }\n  postNewCard(_ref3) {\n    let {\n      name,\n      link\n    } = _ref3;\n    return fetch(this._cardsUrl, {\n      method: \"POST\",\n      headers: {\n        authorization: this._token,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name: name,\n        link: link\n      })\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка: ${res.status}`);\n    });\n  }\n  changeLikeCardStatus(id, isNotLiked) {\n    return fetch(`${this._likesUrl}/${id}`, {\n      method: isNotLiked ? \"PUT\" : \"DELETE\",\n      headers: this._headers\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка: ${res.status}`);\n    });\n  }\n  deleteCard(id) {\n    return fetch(`${this._cardsUrl}/${id}`, {\n      method: 'DELETE',\n      headers: {\n        authorization: this._token\n      }\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка: ${res.status}`);\n    });\n  }\n}\nconst api = new Api({\n  baseUrl: \"http://localhost:3000\",\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\nexport { Api, api };","map":{"version":3,"names":["Api","constructor","_ref","baseUrl","headers","_baseUrl","_headers","_userUrl","_cardsUrl","_likesUrl","_token","_checkResponse","response","method","ok","json","Promise","reject","status","getUserData","token","fetch","then","res","saveUserChanges","_ref2","name","about","Authorization","body","JSON","stringify","changedAvatar","src","authorization","avatar","setUserInfo","getInitialCards","postNewCard","_ref3","link","changeLikeCardStatus","id","isNotLiked","deleteCard","api"],"sources":["/Users/a777/Desktop/react-mesto-api-full-gha/frontend/src/utils/api.js"],"sourcesContent":["class Api {\n  constructor({ baseUrl, headers }) {\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n    this._userUrl = `${this._baseUrl}/users/me`;\n\t\tthis._cardsUrl = `${this._baseUrl}/cards`\n    this._likesUrl = `${this._baseUrl}/cards/likes`;\n    this._token = headers[`authorization`];\n  }\n\n  _checkResponse(response, method) {\n    return response.ok\n      ? response.json()\n      : Promise.reject(`${method}: ${response.status}`);\n  }\n\n  getUserData(token) {\n    return fetch(`users/me`, {\n      \n\t\t\n    }).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка: ${res.status}`);\n    });\n  }\n\n  saveUserChanges({ name, about }) {\n    return fetch(this._userUrl, {\n      method: \"PATCH\",\n      headers: {\n\t\t\t\theaders: {\n\t\t\t\t\t...this.headers,\n\t\t\t\t\tAuthorization: `Bearer ${'token'}`,\n\t\t\t\t\t\"Content-Type\": \"application/json\"\n\t\t\t\t}\n      },\n      body: JSON.stringify({\n        name: name,\n        about: about,\n      }),\n    }).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка: ${res.status}`);\n    });\n  }\n\n  changedAvatar(src) {\n    return fetch(`${this._userUrl}/avatar`, {\n      method: \"PATCH\",\n      headers: {\n        authorization: this._token,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        avatar: src,\n      }),\n    }).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка: ${res.status}`);\n    });\n  }\n\n  setUserInfo(name, about) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers,\n      method: \"PATCH\",\n      body: JSON.stringify({\n        name: name,\n        about: about,\n      }),\n    }).then((res) => {\n      return this._checkResponse(res, \"setUserInfo\");\n    });\n  }\n\n  getInitialCards(token) {\n    return fetch(`${this._baseUrl}/cards`, { \n\t\t\theaders: {\n\t\t\t\t...this.headers,\n\t\t\t\tAuthorization: `Bearer ${token}`\n\t\t\t}\n\t\t })\n\t\t\t.then(\n      (res) => {\n        return this._checkResponse(res, \"getInitialCards\");\n      }\n    );\n  }\n\n\tpostNewCard({\n\t\tname,\n\t\tlink\n\t}) {\n\t\treturn fetch(this._cardsUrl, {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: {\n\t\t\t\tauthorization: this._token,\n        \"Content-Type\": \"application/json\",\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n        name: name,\n\t\t\t\tlink: link,\n      }),\n    }).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка: ${res.status}`);\n    });\n\t\t\n\t}\n\n  changeLikeCardStatus(id, isNotLiked) {\n    return fetch(`${this._likesUrl}/${id}`, {\n      method: isNotLiked ? \"PUT\" : \"DELETE\",\n      headers: this._headers,\n    }).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка: ${res.status}`);\n    });\n  }\n\n\tdeleteCard(id) {\n\t\treturn fetch(`${this._cardsUrl}/${id}`, {\n\t\t\tmethod: 'DELETE',\n\t\t\theaders: {\n\t\t\t\tauthorization: this._token,\n\t\t\t}\n\t\t}).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка: ${res.status}`);\n    });\n\t}\n\n}\nconst api = new Api({\n  baseUrl: \"http://localhost:3000\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n});\n\nexport { Api, api };\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}