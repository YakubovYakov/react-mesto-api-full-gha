{"ast":null,"code":"class Api {\n  constructor(_ref) {\n    let {\n      baseUrl,\n      headers\n    } = _ref;\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n    this._userUrl = `${this._baseUrl}/users/me`;\n    this._cardsUrl = `${this._baseUrl}/cards`;\n    this._likesUrl = `${this._baseUrl}/cards/likes`;\n    this._token = headers[`authorization`];\n  }\n  _checkResponse(response, method) {\n    return response.ok ? response.json() : Promise.reject(`${method}: ${response.status}`);\n  }\n  getUserData() {\n    return fetch(this._userUrl, {\n      headers: this._headers\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка: ${res.status}`);\n    });\n  }\n  saveUserChanges(_ref2) {\n    let {\n      name,\n      about\n    } = _ref2;\n    return fetch(this._userUrl, {\n      method: \"PATCH\",\n      headers: {\n        authorization: this._token,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name: name,\n        about: about\n      })\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка: ${res.status}`);\n    });\n  }\n  changedAvatar(src) {\n    return fetch(`${this._userUrl}/avatar`, {\n      method: \"PATCH\",\n      headers: {\n        authorization: this._token,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        avatar: src\n      })\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка: ${res.status}`);\n    });\n  }\n  setUserInfo(name, about) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers,\n      method: \"PATCH\",\n      body: JSON.stringify({\n        name: name,\n        about: about\n      })\n    }).then(res => {\n      return this._checkResponse(res, \"setUserInfo\");\n    });\n  }\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers\n    }).then(res => {\n      return this._checkResponse(res, \"getInitialCards\");\n    });\n  }\n  postNewCard(_ref3) {\n    let {\n      name,\n      link\n    } = _ref3;\n    return fetch(this._cardsUrl, {\n      method: \"POST\",\n      headers: {\n        authorization: this._token,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name: name,\n        link: link\n      })\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка: ${res.status}`);\n    });\n  }\n  changeLikeCardStatus(id, isNotLiked) {\n    return fetch(`${this._likesUrl}/${id}`, {\n      method: isNotLiked ? \"PUT\" : \"DELETE\",\n      headers: this._headers\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка: ${res.status}`);\n    });\n  }\n  deleteCard(id) {\n    return fetch(`${this._cardsUrl}/${id}`, {\n      method: 'DELETE',\n      headers: {\n        authorization: this._token\n      }\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка: ${res.status}`);\n    });\n  }\n}\nconst api = new Api({\n  baseUrl: \"http\",\n  headers: {\n    authorization: \"2ceb7c58-7c31-4d20-a44d-d2bf37d02e88\",\n    \"Content-Type\": \"aaplication/json\"\n  }\n});\nexport { Api, api };","map":{"version":3,"names":["Api","constructor","_ref","baseUrl","headers","_baseUrl","_headers","_userUrl","_cardsUrl","_likesUrl","_token","_checkResponse","response","method","ok","json","Promise","reject","status","getUserData","fetch","then","res","saveUserChanges","_ref2","name","about","authorization","body","JSON","stringify","changedAvatar","src","avatar","setUserInfo","getInitialCards","postNewCard","_ref3","link","changeLikeCardStatus","id","isNotLiked","deleteCard","api"],"sources":["/Users/a777/Desktop/react-mesto-api-full-gha/frontend/src/utils/api.js"],"sourcesContent":["class Api {\n  constructor({ baseUrl, headers }) {\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n    this._userUrl = `${this._baseUrl}/users/me`;\n\t\tthis._cardsUrl = `${this._baseUrl}/cards`\n    this._likesUrl = `${this._baseUrl}/cards/likes`;\n    this._token = headers[`authorization`];\n  }\n\n  _checkResponse(response, method) {\n    return response.ok\n      ? response.json()\n      : Promise.reject(`${method}: ${response.status}`);\n  }\n\n  getUserData() {\n    return fetch(this._userUrl, {\n      headers: this._headers,\n    }).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка: ${res.status}`);\n    });\n  }\n\n  saveUserChanges({ name, about }) {\n    return fetch(this._userUrl, {\n      method: \"PATCH\",\n      headers: {\n        authorization: this._token,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        name: name,\n        about: about,\n      }),\n    }).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка: ${res.status}`);\n    });\n  }\n\n  changedAvatar(src) {\n    return fetch(`${this._userUrl}/avatar`, {\n      method: \"PATCH\",\n      headers: {\n        authorization: this._token,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        avatar: src,\n      }),\n    }).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка: ${res.status}`);\n    });\n  }\n\n  setUserInfo(name, about) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers,\n      method: \"PATCH\",\n      body: JSON.stringify({\n        name: name,\n        about: about,\n      }),\n    }).then((res) => {\n      return this._checkResponse(res, \"setUserInfo\");\n    });\n  }\n\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, { headers: this._headers }).then(\n      (res) => {\n        return this._checkResponse(res, \"getInitialCards\");\n      }\n    );\n  }\n\n\tpostNewCard({\n\t\tname,\n\t\tlink\n\t}) {\n\t\treturn fetch(this._cardsUrl, {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: {\n\t\t\t\tauthorization: this._token,\n        \"Content-Type\": \"application/json\",\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n        name: name,\n\t\t\t\tlink: link,\n      }),\n    }).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка: ${res.status}`);\n    });\n\t\t\n\t}\n\n  changeLikeCardStatus(id, isNotLiked) {\n    return fetch(`${this._likesUrl}/${id}`, {\n      method: isNotLiked ? \"PUT\" : \"DELETE\",\n      headers: this._headers,\n    }).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка: ${res.status}`);\n    });\n  }\n\n\tdeleteCard(id) {\n\t\treturn fetch(`${this._cardsUrl}/${id}`, {\n\t\t\tmethod: 'DELETE',\n\t\t\theaders: {\n\t\t\t\tauthorization: this._token,\n\t\t\t}\n\t\t}).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка: ${res.status}`);\n    });\n\t}\n\n}\nconst api = new Api({\n  baseUrl: \"http\",\n  headers: {\n    authorization: \"2ceb7c58-7c31-4d20-a44d-d2bf37d02e88\",\n    \"Content-Type\": \"aaplication/json\",\n  },\n});\n\nexport { Api, api };\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}