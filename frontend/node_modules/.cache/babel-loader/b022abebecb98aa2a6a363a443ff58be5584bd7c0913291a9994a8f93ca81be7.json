{"ast":null,"code":"//export const BASE_URL = \"http://localhost:3001\";\nexport var BASE_URL=\"http://localhost:3000\";var checkResponce=function checkResponce(res){return res.ok?res.json():Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status,\" \"));};export var register=function register(_ref){var email=_ref.email,password=_ref.password;return fetch(\"\".concat(BASE_URL,\"/signup\"),{method:\"POST\",headers:{//'Accept': 'application/json',\n'Content-Type':'application/json'},body:JSON.stringify({email:email,password:password})}).then(function(res){return checkResponce(res);});};export var login=function login(email,password){return fetch(\"\".concat(BASE_URL,\"/signin\"),{method:\"POST\",//credentials: 'include',\nheaders:{// 'Accept': 'application/json',\n'Content-Type':'application/json'},body:JSON.stringify({email:email,password:password})}).then(function(res){return checkResponce(res);});};// export const login = ({email, password}) => {\n//   return fetch(`${BASE_URL}/signin`, {\n//     method: \"POST\",\n//     headers: {\n//       'Content-Type': 'application/json'\n//     },\n//     body: JSON.stringify({ email, password }),\n//   }).then((res) => checkResponce(res))\n// };\nexport var checkToken=function checkToken(token){return fetch(\"\".concat(BASE_URL,\"/users/me\"),{method:\"GET\",headers:{Accept:\"appliccation/json\",\"Content-Type\":\"appliccation/json\",Authorization:\"Bearer \".concat(token)}}).then(function(res){if(res.ok){return res.json();}return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));});};","map":{"version":3,"names":["BASE_URL","checkResponce","res","ok","json","Promise","reject","concat","status","register","_ref","email","password","fetch","method","headers","body","JSON","stringify","then","login","checkToken","token","Accept","Authorization"],"sources":["/Users/a777/Desktop/react-mesto-api-full-gha/frontend/src/utils/auth.js"],"sourcesContent":["//export const BASE_URL = \"http://localhost:3001\";\n\nexport const BASE_URL = \"http://localhost:3000\";\n\nconst checkResponce = (res) => \n\tres.ok ? res.json() : Promise.reject(`Ошибка: ${res.status} `)\n\nexport const register = ({email, password}) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: \"POST\",\n    headers: {\n      //'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ email, password }),\n  }).then((res) => checkResponce(res))\n};\n\nexport const login = (email, password) => {\n\treturn fetch(`${BASE_URL}/signin`, {\n\t\tmethod: \"POST\",\n\t\t//credentials: 'include',\n\t\theaders: {\n\t\t\t// 'Accept': 'application/json',\n      'Content-Type': 'application/json'\n\t\t},\n\t\tbody: JSON.stringify({ email, password })\n\t})\n\t\t.then(res => checkResponce(res))\n};\n\n// export const login = ({email, password}) => {\n//   return fetch(`${BASE_URL}/signin`, {\n//     method: \"POST\",\n//     headers: {\n//       'Content-Type': 'application/json'\n//     },\n//     body: JSON.stringify({ email, password }),\n//   }).then((res) => checkResponce(res))\n// };\n\nexport const checkToken = (token) => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: \"GET\",\n    headers: {\n      Accept: \"appliccation/json\",\n      \"Content-Type\": \"appliccation/json\",\n      Authorization: `Bearer ${token}`,\n    },\n  }).then((res) => {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  });\n};\n"],"mappings":"AAAA;AAEA,MAAO,IAAM,CAAAA,QAAQ,CAAG,uBAAuB,CAE/C,GAAM,CAAAC,aAAa,CAAG,QAAhB,CAAAA,aAAaA,CAAIC,GAAG,QACzB,CAAAA,GAAG,CAACC,EAAE,CAAGD,GAAG,CAACE,IAAI,CAAC,CAAC,CAAGC,OAAO,CAACC,MAAM,0CAAAC,MAAA,CAAYL,GAAG,CAACM,MAAM,KAAG,CAAC,GAE/D,MAAO,IAAM,CAAAC,QAAQ,CAAG,QAAX,CAAAA,QAAQA,CAAAC,IAAA,CAA0B,IAArB,CAAAC,KAAK,CAAAD,IAAA,CAALC,KAAK,CAAEC,QAAQ,CAAAF,IAAA,CAARE,QAAQ,CACvC,MAAO,CAAAC,KAAK,IAAAN,MAAA,CAAIP,QAAQ,YAAW,CACjCc,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP;AACA,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEP,KAAK,CAALA,KAAK,CAAEC,QAAQ,CAARA,QAAS,CAAC,CAC1C,CAAC,CAAC,CAACO,IAAI,CAAC,SAACjB,GAAG,QAAK,CAAAD,aAAa,CAACC,GAAG,CAAC,GAAC,CACtC,CAAC,CAED,MAAO,IAAM,CAAAkB,KAAK,CAAG,QAAR,CAAAA,KAAKA,CAAIT,KAAK,CAAEC,QAAQ,CAAK,CACzC,MAAO,CAAAC,KAAK,IAAAN,MAAA,CAAIP,QAAQ,YAAW,CAClCc,MAAM,CAAE,MAAM,CACd;AACAC,OAAO,CAAE,CACR;AACG,cAAc,CAAE,kBACpB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEP,KAAK,CAALA,KAAK,CAAEC,QAAQ,CAARA,QAAS,CAAC,CACzC,CAAC,CAAC,CACAO,IAAI,CAAC,SAAAjB,GAAG,QAAI,CAAAD,aAAa,CAACC,GAAG,CAAC,GAAC,CAClC,CAAC,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAO,IAAM,CAAAmB,UAAU,CAAG,QAAb,CAAAA,UAAUA,CAAIC,KAAK,CAAK,CACnC,MAAO,CAAAT,KAAK,IAAAN,MAAA,CAAIP,QAAQ,cAAa,CACnCc,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CACPQ,MAAM,CAAE,mBAAmB,CAC3B,cAAc,CAAE,mBAAmB,CACnCC,aAAa,WAAAjB,MAAA,CAAYe,KAAK,CAChC,CACF,CAAC,CAAC,CAACH,IAAI,CAAC,SAACjB,GAAG,CAAK,CACf,GAAIA,GAAG,CAACC,EAAE,CAAE,CACV,MAAO,CAAAD,GAAG,CAACE,IAAI,CAAC,CAAC,CACnB,CACA,MAAO,CAAAC,OAAO,CAACC,MAAM,0CAAAC,MAAA,CAAYL,GAAG,CAACM,MAAM,CAAE,CAAC,CAChD,CAAC,CAAC,CACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}