{"ast":null,"code":"export const BASE_URL = \"http://localhost:3001\";\n\n//export const BASE_URL = \"https://auth.nomoreparties.co\";\n\nconst checkResponce = res => res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status} `);\nexport const register = _ref => {\n  let {\n    email,\n    password\n  } = _ref;\n  return fetch(`${BASE_URL}/signup`, {\n    method: \"POST\",\n    headers: {\n      //'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(res => checkResponce(res));\n};\nexport const login = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: \"POST\",\n    credentials: 'include',\n    headers: {\n      // 'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(res => checkResponce(res));\n};\n\n// export const login = ({email, password}) => {\n//   return fetch(`${BASE_URL}/signin`, {\n//     method: \"POST\",\n//     headers: {\n//       'Content-Type': 'application/json'\n//     },\n//     body: JSON.stringify({ email, password }),\n//   }).then((res) => checkResponce(res))\n// };\n\nexport const checkToken = token => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: \"GET\",\n    headers: {\n      Accept: \"appliccation/json\",\n      \"Content-Type\": \"appliccation/json\",\n      Authorization: `Bearer ${token}`\n    }\n  }).then(res => {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  });\n};","map":{"version":3,"names":["BASE_URL","checkResponce","res","ok","json","Promise","reject","status","register","_ref","email","password","fetch","method","headers","body","JSON","stringify","then","login","credentials","checkToken","token","Accept","Authorization"],"sources":["/Users/a777/Desktop/react-mesto-api-full-gha/frontend/src/utils/auth.js"],"sourcesContent":["export const BASE_URL = \"http://localhost:3001\";\n\n//export const BASE_URL = \"https://auth.nomoreparties.co\";\n\nconst checkResponce = (res) => \n\tres.ok ? res.json() : Promise.reject(`Ошибка: ${res.status} `)\n\nexport const register = ({email, password}) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: \"POST\",\n    headers: {\n      //'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ email, password }),\n  }).then((res) => checkResponce(res))\n};\n\nexport const login = (email, password) => {\n\treturn fetch(`${BASE_URL}/signin`, {\n\t\tmethod: \"POST\",\n\t\tcredentials: 'include',\n\t\theaders: {\n\t\t\t// 'Accept': 'application/json',\n      'Content-Type': 'application/json'\n\t\t},\n\t\tbody: JSON.stringify({ email, password })\n\t})\n\t\t.then((res) => checkResponce(res))\n};\n\n// export const login = ({email, password}) => {\n//   return fetch(`${BASE_URL}/signin`, {\n//     method: \"POST\",\n//     headers: {\n//       'Content-Type': 'application/json'\n//     },\n//     body: JSON.stringify({ email, password }),\n//   }).then((res) => checkResponce(res))\n// };\n\nexport const checkToken = (token) => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: \"GET\",\n    headers: {\n      Accept: \"appliccation/json\",\n      \"Content-Type\": \"appliccation/json\",\n      Authorization: `Bearer ${token}`,\n    },\n  }).then((res) => {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  });\n};\n"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,uBAAuB;;AAE/C;;AAEA,MAAMC,aAAa,GAAIC,GAAG,IACzBA,GAAG,CAACC,EAAE,GAAGD,GAAG,CAACE,IAAI,CAAC,CAAC,GAAGC,OAAO,CAACC,MAAM,CAAE,WAAUJ,GAAG,CAACK,MAAO,GAAE,CAAC;AAE/D,OAAO,MAAMC,QAAQ,GAAGC,IAAA,IAAuB;EAAA,IAAtB;IAACC,KAAK;IAAEC;EAAQ,CAAC,GAAAF,IAAA;EACxC,OAAOG,KAAK,CAAE,GAAEZ,QAAS,SAAQ,EAAE;IACjCa,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP;MACA,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEP,KAAK;MAAEC;IAAS,CAAC;EAC1C,CAAC,CAAC,CAACO,IAAI,CAAEhB,GAAG,IAAKD,aAAa,CAACC,GAAG,CAAC,CAAC;AACtC,CAAC;AAED,OAAO,MAAMiB,KAAK,GAAGA,CAACT,KAAK,EAAEC,QAAQ,KAAK;EACzC,OAAOC,KAAK,CAAE,GAAEZ,QAAS,SAAQ,EAAE;IAClCa,MAAM,EAAE,MAAM;IACdO,WAAW,EAAE,SAAS;IACtBN,OAAO,EAAE;MACR;MACG,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEP,KAAK;MAAEC;IAAS,CAAC;EACzC,CAAC,CAAC,CACAO,IAAI,CAAEhB,GAAG,IAAKD,aAAa,CAACC,GAAG,CAAC,CAAC;AACpC,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMmB,UAAU,GAAIC,KAAK,IAAK;EACnC,OAAOV,KAAK,CAAE,GAAEZ,QAAS,WAAU,EAAE;IACnCa,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACPS,MAAM,EAAE,mBAAmB;MAC3B,cAAc,EAAE,mBAAmB;MACnCC,aAAa,EAAG,UAASF,KAAM;IACjC;EACF,CAAC,CAAC,CAACJ,IAAI,CAAEhB,GAAG,IAAK;IACf,IAAIA,GAAG,CAACC,EAAE,EAAE;MACV,OAAOD,GAAG,CAACE,IAAI,CAAC,CAAC;IACnB;IACA,OAAOC,OAAO,CAACC,MAAM,CAAE,WAAUJ,GAAG,CAACK,MAAO,EAAC,CAAC;EAChD,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}